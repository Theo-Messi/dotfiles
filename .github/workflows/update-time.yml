name: Update File Time Info

on:
  push:
    branches:
      - main

jobs:
  update_file_time_info:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # 获取完整的提交历史

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get current date
        id: current_date
        run: echo "DATE=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
    
      - name: Update files with commit info  # 第四步：更新文件中的提交信息
        run: |
          # current_date="${{ env.DATE }}"  # 读取环境变量中的当前日期
      
          # 需要更新的文件
          files_to_update="clash/TheoDirect.yaml clash/TheoDiversion.yaml clash/clash.meta.config.yaml"  
      
          # 遍历每个文件
          for file in $files_to_update; do 
            if [ -f "$file" ]; then 
              # 前置条件：检查上一次提交中是否有这些文件的变动
              if git diff HEAD~1 HEAD -- "$file" | grep -q "$file"; then
                # 读取原始文件内容
                original_content=$(cat "$file")  # 读取原始文件内容
                # 替换现有的更新时间信息（如果存在）
                updated_content=$(echo "$original_content" | sed -E 's/^# Updated: .*/# Updated: '"${{ env.DATE }}"'/')  
      
                # 将更新后的内容写入临时文件
                echo "$updated_content" > "$file.tmp" 
      
                # 检查文件是否有改动
                if ! cmp -s "$file" "$file.tmp"; then  # 使用 cmp -s 比较文件内容
                  # 如果文件有改动，则替换原文件
                  mv "$file.tmp" "$file"  # 替换原文件
                else
                  # 如果文件没有改动，则删除临时文件
                  rm "$file.tmp"  # 删除临时文件
                fi
              else
                echo "$file has no changes in the last commit."
              fi
            fi
          done



      - name: Commit and push changes
        run: |
          git add clash/TheoDirect.yaml clash/TheoDiversion.yaml clash/clash.meta.config.yaml
          git diff --quiet || git commit -m "${{ env.DATE }}"          
          git reset --soft HEAD^  #重置索引并保留更改
          git commit -m "${{ env.DATE }}"
          git push -f origin main

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
## Brak通知流程运行状态

      - name: Translate job status to Chinese
        id: translate-status
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "translated_status=成功" >> $GITHUB_ENV
          elif [ "${{ job.status }}" == "failure" ]; then
            echo "translated_status=失败" >> $GITHUB_ENV
          elif [ "${{ job.status }}" == "cancelled" ]; then
            echo "translated_status=取消" >> $GITHUB_ENV
          else
            echo "translated_status=未知" >> $GITHUB_ENV
          fi

      - name: Notify job status
        if: always()  # 确保这一步始终运行，不管之前的步骤是否成功
        run: |
          curl -X "POST" "${{ secrets.BARK_KEY }}" \
             -H 'Content-Type: application/json; charset=utf-8' \
             -d '{
                    "body": "${{ github.repository }}于${{ env.DATE }}运行${{ env.translated_status }}",
                    "title": "Github Actions",
                    "badge": 1,
                    "category": "Github Actions",
                    "sound": "multiwayinvitation.caf",
                    "icon": "https://cdn.pixabay.com/photo/2022/01/30/13/33/github-6980894_1280.png",
                    "group": "Github Actions"
                  }'
